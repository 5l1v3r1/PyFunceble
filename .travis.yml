env:
  global:
    - PYFUNCEBLE_AUTO_CONFIGURATION="PyFunceble"

language: generic

jobs:
  include:
    - os: linux
      dist: bionic
      name: "Test with Python 3.8.0 under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.8.0"
        - TOXENV="py38"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.8.0 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.8.0"
        - TOXENV="py38"
    - os: linux
      dist: bionic
      name: "Test with Python 3.7.5 under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.7.5"
        - TOXENV="py37"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.7.5 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.7.5"
        - TOXENV="py37"
    - os: linux
      dist: bionic
      name: "Test with Python 3.7.4 under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.7.4"
        - TOXENV="py37"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.7.4 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.7.4"
        - TOXENV="py37"
    - os: linux
      dist: bionic
      name: "Test with Python 3.7.3 under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.7.3"
        - TOXENV="py37"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.7.3 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.7.3"
        - TOXENV="py37"
    - os: linux
      dist: bionic
      name: "Test with Python 3.6.9 under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.6.9"
        - TOXENV="py36"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.6.9 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.6.9"
        - TOXENV="py36"
    - os: linux
      dist: bionic
      name: "Test with Python 3.6.8 <under Ubuntu 18.04"
      env:
        - PYTHON_VERSION="3.6.8"
        - TOXENV="py36"
    - os: osx
      osx_image: xcode9.4
      name: "Test with Python 3.6.8 under macOS 10.13"
      env:
        - PYTHON_VERSION="3.6.8"
        - TOXENV="py36"

matrix:
  fast_finish: true

install:
  - export PATH="${HOME}/miniconda/bin:${PATH}"
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh; else wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - bash miniconda.sh -b -p ${HOME}/miniconda
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda create -q -n test-environment python="${PYTHON_VERSION}"
  - source activate test-environment
  - python --version --version
  - pip --version
  - conda --version
  - pip install pylint coverage coveralls codacy-coverage tox-current-env
  - pip install -e .

script:
  - tox --current-env

after_success:
  - python-codacy-coverage -r coverage.xml
  - coveralls

deploy:
  provider: pypi
  user: funilrys
  password:
    secure: IG1FlVINvTCO7jscSz4aQMRABBcZVFGNBfDB0giAhtNV/Nr98jSyLZXETx7yquD93dFZpL58HXcPRxoa3hemyBLcTc0ATMsNBM48IrN3xaxfPytlQQn7aocKdZLAMbriCo7CO4x4O00lu3Cx2tAZtZMaDGYN+KpWIR9V+dXF1hHLj7owilko3YVXiXXamlOZmkdv28PcACQlJ7QLLYxTY3o/LuLrCOvo3zc+Ao0JfKpOv9Fm41keUS51Ek5QWXFaO7VNho6CXV7/5rJbF9w1flkM7GEUH78pjs+KpwBV7auwFYMerYPq5GVPiL117y9ojXxfF+B1qY1flreugCgSRJQKhzvfgSlgGhM93GG2yPpQu6LGIIZJ0MMcXldheY1JOzVMddXYbFTeG3j+/0a9EF47G9ZUeCiY3uCmaqaIuMvuby+Ze0XsHqrOkN+uALtgmrJuhDgiJvY1+qAIo56jBcaTYcOs+xqkFbqviltNjqriH3uFRhXZUpVQchd49eq6m+OyEu4jcYH9Pn1qHdwKBKU/KCRbYy9zAj5gso/HrSRaMrjMGUcdlzNEWKHVstnBPIq+9xnZ5Zeb7ev6i2vTH3WVHQoAFRGvNv/K7+zRMt0iDK2H9SCg3mi4v1c/JwUuY6Oht/PXwbbJ8sAIVAs+3P+FrEBIjkkbtjjPDHaA9rg=
  distributions: sdist bdist_wheel
  skip_existing: true
  on:
    all_branches: true
    condition: "${TRAVIS_BRANCH} =~ ^dev|master$"

notifications:
  on_success: change
  on_failure: always
